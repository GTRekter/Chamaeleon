//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CheckingAccountClient.TransactionServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TransactionList", Namespace="http://schemas.datacontract.org/2004/07/SharedLib.Models", ItemName="Transaction")]
    [System.SerializableAttribute()]
    public class TransactionList : System.Collections.Generic.List<SharedLib.Models.Transaction> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TransactionServiceRef.ITransactionService")]
    public interface ITransactionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/AddDebit", ReplyAction="http://tempuri.org/ITransactionService/AddDebitResponse")]
        void AddDebit(int id, decimal amount, System.DateTime date, string desccription, int checkNo, SharedLib.Enums.DebitTypeEnum debitType, decimal fee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/AddDebit", ReplyAction="http://tempuri.org/ITransactionService/AddDebitResponse")]
        System.Threading.Tasks.Task AddDebitAsync(int id, decimal amount, System.DateTime date, string desccription, int checkNo, SharedLib.Enums.DebitTypeEnum debitType, decimal fee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/UpdateDebit", ReplyAction="http://tempuri.org/ITransactionService/UpdateDebitResponse")]
        void UpdateDebit(int id, decimal amount, System.DateTime date, string desccription, int checkNo, SharedLib.Enums.DebitTypeEnum debitType, decimal fee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/UpdateDebit", ReplyAction="http://tempuri.org/ITransactionService/UpdateDebitResponse")]
        System.Threading.Tasks.Task UpdateDebitAsync(int id, decimal amount, System.DateTime date, string desccription, int checkNo, SharedLib.Enums.DebitTypeEnum debitType, decimal fee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/DeleteDebit", ReplyAction="http://tempuri.org/ITransactionService/DeleteDebitResponse")]
        void DeleteDebit(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/DeleteDebit", ReplyAction="http://tempuri.org/ITransactionService/DeleteDebitResponse")]
        System.Threading.Tasks.Task DeleteDebitAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/AddCredit", ReplyAction="http://tempuri.org/ITransactionService/AddCreditResponse")]
        void AddCredit(int id, decimal amount, SharedLib.Enums.CreditTypeEnum creditType, System.DateTime date, string desccription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/AddCredit", ReplyAction="http://tempuri.org/ITransactionService/AddCreditResponse")]
        System.Threading.Tasks.Task AddCreditAsync(int id, decimal amount, SharedLib.Enums.CreditTypeEnum creditType, System.DateTime date, string desccription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/UpdateCredit", ReplyAction="http://tempuri.org/ITransactionService/UpdateCreditResponse")]
        void UpdateCredit(int id, decimal amount, SharedLib.Enums.CreditTypeEnum creditType, System.DateTime date, string desccription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/UpdateCredit", ReplyAction="http://tempuri.org/ITransactionService/UpdateCreditResponse")]
        System.Threading.Tasks.Task UpdateCreditAsync(int id, decimal amount, SharedLib.Enums.CreditTypeEnum creditType, System.DateTime date, string desccription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/DeleteCredit", ReplyAction="http://tempuri.org/ITransactionService/DeleteCreditResponse")]
        void DeleteCredit(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/DeleteCredit", ReplyAction="http://tempuri.org/ITransactionService/DeleteCreditResponse")]
        System.Threading.Tasks.Task DeleteCreditAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/GetAllTransactions", ReplyAction="http://tempuri.org/ITransactionService/GetAllTransactionsResponse")]
        CheckingAccountClient.TransactionServiceRef.TransactionList GetAllTransactions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/GetAllTransactions", ReplyAction="http://tempuri.org/ITransactionService/GetAllTransactionsResponse")]
        System.Threading.Tasks.Task<CheckingAccountClient.TransactionServiceRef.TransactionList> GetAllTransactionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/GetTransactionsByDateRange", ReplyAction="http://tempuri.org/ITransactionService/GetTransactionsByDateRangeResponse")]
        CheckingAccountClient.TransactionServiceRef.TransactionList GetTransactionsByDateRange(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/GetTransactionsByDateRange", ReplyAction="http://tempuri.org/ITransactionService/GetTransactionsByDateRangeResponse")]
        System.Threading.Tasks.Task<CheckingAccountClient.TransactionServiceRef.TransactionList> GetTransactionsByDateRangeAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/GetCreditsByType", ReplyAction="http://tempuri.org/ITransactionService/GetCreditsByTypeResponse")]
        CheckingAccountClient.TransactionServiceRef.TransactionList GetCreditsByType(SharedLib.Enums.CreditTypeEnum creditType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/GetCreditsByType", ReplyAction="http://tempuri.org/ITransactionService/GetCreditsByTypeResponse")]
        System.Threading.Tasks.Task<CheckingAccountClient.TransactionServiceRef.TransactionList> GetCreditsByTypeAsync(SharedLib.Enums.CreditTypeEnum creditType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/GetDebitsByType", ReplyAction="http://tempuri.org/ITransactionService/GetDebitsByTypeResponse")]
        CheckingAccountClient.TransactionServiceRef.TransactionList GetDebitsByType(SharedLib.Enums.DebitTypeEnum debitType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/GetDebitsByType", ReplyAction="http://tempuri.org/ITransactionService/GetDebitsByTypeResponse")]
        System.Threading.Tasks.Task<CheckingAccountClient.TransactionServiceRef.TransactionList> GetDebitsByTypeAsync(SharedLib.Enums.DebitTypeEnum debitType);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransactionServiceChannel : CheckingAccountClient.TransactionServiceRef.ITransactionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransactionServiceClient : System.ServiceModel.ClientBase<CheckingAccountClient.TransactionServiceRef.ITransactionService>, CheckingAccountClient.TransactionServiceRef.ITransactionService {
        
        public TransactionServiceClient() {
        }
        
        public TransactionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransactionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddDebit(int id, decimal amount, System.DateTime date, string desccription, int checkNo, SharedLib.Enums.DebitTypeEnum debitType, decimal fee) {
            base.Channel.AddDebit(id, amount, date, desccription, checkNo, debitType, fee);
        }
        
        public System.Threading.Tasks.Task AddDebitAsync(int id, decimal amount, System.DateTime date, string desccription, int checkNo, SharedLib.Enums.DebitTypeEnum debitType, decimal fee) {
            return base.Channel.AddDebitAsync(id, amount, date, desccription, checkNo, debitType, fee);
        }
        
        public void UpdateDebit(int id, decimal amount, System.DateTime date, string desccription, int checkNo, SharedLib.Enums.DebitTypeEnum debitType, decimal fee) {
            base.Channel.UpdateDebit(id, amount, date, desccription, checkNo, debitType, fee);
        }
        
        public System.Threading.Tasks.Task UpdateDebitAsync(int id, decimal amount, System.DateTime date, string desccription, int checkNo, SharedLib.Enums.DebitTypeEnum debitType, decimal fee) {
            return base.Channel.UpdateDebitAsync(id, amount, date, desccription, checkNo, debitType, fee);
        }
        
        public void DeleteDebit(int id) {
            base.Channel.DeleteDebit(id);
        }
        
        public System.Threading.Tasks.Task DeleteDebitAsync(int id) {
            return base.Channel.DeleteDebitAsync(id);
        }
        
        public void AddCredit(int id, decimal amount, SharedLib.Enums.CreditTypeEnum creditType, System.DateTime date, string desccription) {
            base.Channel.AddCredit(id, amount, creditType, date, desccription);
        }
        
        public System.Threading.Tasks.Task AddCreditAsync(int id, decimal amount, SharedLib.Enums.CreditTypeEnum creditType, System.DateTime date, string desccription) {
            return base.Channel.AddCreditAsync(id, amount, creditType, date, desccription);
        }
        
        public void UpdateCredit(int id, decimal amount, SharedLib.Enums.CreditTypeEnum creditType, System.DateTime date, string desccription) {
            base.Channel.UpdateCredit(id, amount, creditType, date, desccription);
        }
        
        public System.Threading.Tasks.Task UpdateCreditAsync(int id, decimal amount, SharedLib.Enums.CreditTypeEnum creditType, System.DateTime date, string desccription) {
            return base.Channel.UpdateCreditAsync(id, amount, creditType, date, desccription);
        }
        
        public void DeleteCredit(int id) {
            base.Channel.DeleteCredit(id);
        }
        
        public System.Threading.Tasks.Task DeleteCreditAsync(int id) {
            return base.Channel.DeleteCreditAsync(id);
        }
        
        public CheckingAccountClient.TransactionServiceRef.TransactionList GetAllTransactions() {
            return base.Channel.GetAllTransactions();
        }
        
        public System.Threading.Tasks.Task<CheckingAccountClient.TransactionServiceRef.TransactionList> GetAllTransactionsAsync() {
            return base.Channel.GetAllTransactionsAsync();
        }
        
        public CheckingAccountClient.TransactionServiceRef.TransactionList GetTransactionsByDateRange(System.DateTime start, System.DateTime end) {
            return base.Channel.GetTransactionsByDateRange(start, end);
        }
        
        public System.Threading.Tasks.Task<CheckingAccountClient.TransactionServiceRef.TransactionList> GetTransactionsByDateRangeAsync(System.DateTime start, System.DateTime end) {
            return base.Channel.GetTransactionsByDateRangeAsync(start, end);
        }
        
        public CheckingAccountClient.TransactionServiceRef.TransactionList GetCreditsByType(SharedLib.Enums.CreditTypeEnum creditType) {
            return base.Channel.GetCreditsByType(creditType);
        }
        
        public System.Threading.Tasks.Task<CheckingAccountClient.TransactionServiceRef.TransactionList> GetCreditsByTypeAsync(SharedLib.Enums.CreditTypeEnum creditType) {
            return base.Channel.GetCreditsByTypeAsync(creditType);
        }
        
        public CheckingAccountClient.TransactionServiceRef.TransactionList GetDebitsByType(SharedLib.Enums.DebitTypeEnum debitType) {
            return base.Channel.GetDebitsByType(debitType);
        }
        
        public System.Threading.Tasks.Task<CheckingAccountClient.TransactionServiceRef.TransactionList> GetDebitsByTypeAsync(SharedLib.Enums.DebitTypeEnum debitType) {
            return base.Channel.GetDebitsByTypeAsync(debitType);
        }
    }
}
